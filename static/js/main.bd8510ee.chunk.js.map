{"version":3,"sources":["logo.svg","compunent/mitable.js","compunent/multiselectInput.js","compunent/autoComplect.js","logic/useGenerator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","fontWeight","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableBody","Object","keys","data","map","key","i","scope","coursecode","section","schedule","sch","split","day","time","formControl","margin","spacing","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","MultipleSelect","useTheme","React","useState","selectedItem","setSelectedItem","useEffect","selectedSections","FormControl","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","handelChange","sid","sname","input","Input","MenuItem","soptions","name","ComboBox","inputValue","setInputValue","courseCode","Autocomplete","options","clist","onInputChange","newInputValue","val","title","getOptionLabel","option","renderInput","params","TextField","label","variant","strptime","string","postindex","search","RegExp","slice","post","length","h","m","parseInt","Date","toString","covStrToDatetime","t1","t2","isValidSchedule","classSchedule","newStartTime","newFinishTime","counter","clsStartTime","clsFinishTime","reducer","state","type","courseData","payload","courseList","App","useReducer","dstate","dispatch","idata","setIdata","listofClassRoutting","setlistofClassRoutting","toUpperCase","handleAddlistofRouting","obj","s","renderOption","couse","code","sections","error","doOparation","filter","doPreOprationWork","Generator","inputs","idx","values","course","listOFsection","indexOf","index","validSection","classSchedulecpy","JSON","parse","stringify","listOFschedule","schduleIdx","push","jdata","j","IconButton","onClick","temp","removeInputField","Button","now","size","Container","gdata","clsScheduleObj","iterator","clsDetailsObj","showData","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bd8510ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    fontWeight:700\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Course code</StyledTableCell>\r\n            <StyledTableCell >section</StyledTableCell>\r\n            <StyledTableCell >Schedule</StyledTableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.keys(props.data).map((key,i) => (\r\n            <StyledTableRow key={key+i}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                  <div className=\"r-courseC\">\r\n\r\n                {props.data[key].coursecode}\r\n                  </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell><div >{props.data[key].section}</div></StyledTableCell>\r\n              <StyledTableCell>\r\n\r\n                <div className=\"r-times\">\r\n                    {props.data[key].schedule.map((sch,i)=>{\r\n                        const [day,time]=sch.split(' ');\r\n                        return(\r\n                            <div className=\"r-time\" key={sch}>\r\n                            <samp className=\"r-tday\">{day}</samp>  {time}\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                \r\n\r\n                </div>\r\n              </StyledTableCell>\r\n           \r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [selectedItem, setSelectedItem] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    // console.log(event.target.value);\r\n    \r\n    setSelectedItem(event.target.value);\r\n    props.handelChange(props.sid,props.sname,event.target.value);\r\n\r\n  };\r\n\r\n //only run this funtion when the parents compunent has change the  state \r\n  React.useEffect(()=>{\r\n    // console.log('multi-select');\r\n    setSelectedItem(props.selectedSections)\r\n    \r\n  },[props.selectedSections]);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-name-label\">Section</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={selectedItem}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n             <MenuItem key={'all'} value={'all'} >\r\n            all\r\n            </MenuItem>\r\n          {props.soptions(props.sid).map((name) => (\r\n            <MenuItem key={name} value={name} >\r\n            {name}\r\n            </MenuItem>\r\n        ))}\r\n \r\n        </Select>\r\n      </FormControl>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function ComboBox(props) {\r\n\r\n  const [inputValue,setInputValue]=React.useState('');\r\n\r\n  let isupdating=true;\r\n    const handelChangr=(event,val)=>{\r\n        // console.log('handel change');\r\n        \r\n        if(val!=null){\r\n          props.handelChange(props.sid,props.sname,val.title);//val is a object {title:'ACT 101'}\r\n          setInputValue(val.title);\r\n          \r\n        }\r\n        \r\n        \r\n    }\r\n    React.useEffect(()=>{\r\n      \r\n      \r\n      // console.log('[DEBUG] '+props.courseCode);\r\n      \r\n      \r\n      // if(isupdating){\r\n\r\n        setInputValue(props.courseCode?props.courseCode:'');\r\n      \r\n      // setValue(props.courseCode?props.courseCode:'');\r\n    },[props.courseCode]);\r\n    React.useEffect(()=>{\r\n      return()=>{\r\n        // isupdating=true;\r\n      }\r\n    },[inputValue])\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"controllable-states-demo\"\r\n      // value={value}\r\n      options={props.clist}\r\n      inputValue={inputValue}\r\n      onInputChange={(event, newInputValue) => {\r\n        // console.log('inp');\r\n        \r\n        // isupdating=false;\r\n        setInputValue(newInputValue);\r\n      }}\r\n      onChange={handelChangr}\r\n      getOptionLabel={(option) => option.title}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params}  label=\"Course code\" variant=\"outlined\" />}\r\n    />\r\n  );\r\n}\r\n","function strptime(string) {\r\n    // convart string to datetime object \r\n    // string formate shoule be \"h:mAM/PM\"\r\n    const postindex = string.search(new RegExp('AM|PM'));// search fo am or pm in the string \r\n    const time = string.slice(0, postindex);\r\n    const post = string.slice(postindex, string.length);\r\n  \r\n    let [h, m] = time.split(':');\r\n\r\n    //if h==\"1\" or \"2\"....\"9\" then make it \"01\" or \"02\"....\"09\"\r\n    if(parseInt(h)<10){\r\n      h=`0${h}`;\r\n    }\r\n    if (post === \"AM\") {\r\n      return new Date(`1900-01-01T${h}:${m}`);\r\n    }\r\n\r\n    // post PM  \r\n    if (parseInt(h) != 12) {\r\n      h = parseInt(h) + 12;\r\n    }\r\n    return new Date(`1900-01-01T${h.toString()}:${m}`);\r\n  \r\n  }\r\n  function covStrToDatetime(time) {\r\n    //[params expample]  ('10:10AM-11:40AM')\r\n    const [t1, t2] = time.split('-');\r\n    return [strptime(t1), strptime(t2)];\r\n  }\r\n\r\nfunction isValidSchedule(day, time, classSchedule) {\r\n    //[params expample]  ('S', '10:10AM-11:40AM', OBJECT)\r\n    // console.log(day);\r\n  \r\n    // console.log(classSchedule);\r\n  \r\n    if (classSchedule[day].length === 0) {\r\n      return true;\r\n    }\r\n    if (day == null || time == null) {\r\n  \r\n      return false;\r\n    }\r\n    const [newStartTime, newFinishTime] = covStrToDatetime(time);\r\n    let counter = 0;\r\n    for (const iterator of classSchedule[day]) {\r\n      const [clsStartTime, clsFinishTime] = covStrToDatetime(iterator['time']);\r\n      if ((newStartTime < clsStartTime && newFinishTime < clsFinishTime) || (newStartTime > clsStartTime && clsFinishTime < newStartTime)) {\r\n        counter += 1;\r\n      }\r\n    }\r\n    if (counter === classSchedule[day].length) {\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n\r\n\r\n\r\nexport default function Generator( inputs, idx, classSchedule, dstate, handleAddlistofRouting){\r\n    const values = Object.values(inputs);\r\n  // console.log(values);\r\n  // console.log(idx);\r\n\r\n\r\n  if (idx == values.length)\r\n    return;\r\n  // console.log(values);\r\n  const [course, code] = values[idx].coursecode.split(' ') //CSE 225=> ['CSE' , '225']\r\n  const listOFsection = values[idx].section.indexOf('all') !== -1 ? Object.keys(dstate.courseData[course][code]) : [...values[idx].section];\r\n  // for eache section in this  course \r\n  for (let index = 0; index < listOFsection.length; index++) {\r\n    let validSection = 0;\r\n    const classSchedulecpy = JSON.parse(JSON.stringify(classSchedule));\r\n    //  classSchedulecpy =  JSON.parse(classSchedulecpy);\r\n    const listOFschedule = Object.keys(dstate.courseData[course][code][listOFsection[index]]);//return list of days that a particular sectoin have a class on\r\n\r\n    for (let schduleIdx = 0; schduleIdx < listOFschedule.length; schduleIdx++) {\r\n      // #for every schedule in a section we chack its valid or not\r\n      // # if its not valid then new loop next section in this course \r\n\r\n      //[argument expample]  (S, 10:10AM-11:40AM, classSchduelOBJ)\r\n      if (isValidSchedule(listOFschedule[schduleIdx], dstate.courseData[course][code][listOFsection[index]][listOFschedule[schduleIdx]], classSchedulecpy)) {\r\n        validSection += 1;\r\n\r\n        classSchedulecpy[listOFschedule[schduleIdx]].push({\r\n          'coursecode': `${course} ${code}`,\r\n          'section': listOFsection[index],\r\n          'time': dstate.courseData[course][code][listOFsection[index]][listOFschedule[schduleIdx]],\r\n          'room': 'none'\r\n        });\r\n      } else {\r\n        break;\r\n      }\r\n\r\n    }\r\n    if (listOFschedule.length == validSection) {\r\n\r\n      if (idx == values.length - 1) {\r\n        // console.log('[dubug]');\r\n\r\n        // console.log(classSchedulecpy);\r\n        handleAddlistofRouting(classSchedulecpy)\r\n\r\n      } else {\r\n        Generator(inputs, idx + 1, { ...classSchedulecpy }, dstate, handleAddlistofRouting);\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n}","import React, { useEffect, useReducer, useState } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport jdata from './coursedlist.json';\n//material ui\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// compunent\nimport ViewRouteing from './compunent/viewRouting';\nimport CustomizedTables from './compunent/mitable';\nimport MultipleSelect from './compunent/multiselectInput';\nimport ComboBox from './compunent/autoComplect';\n// logic\nimport Generator from './logic/useGenerator';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'initCourses':\n      {\n        return { ...state, courseData: action.payload }\n      }\n    case 'initCourseList': {\n      return { ...state, courseList: action.payload }\n    }\n\n    default: {\n\n      return state;\n    }\n  }\n}\n\n\n\n\n\nfunction App() {\n\n  const [dstate, dispatch] = useReducer(reducer, {});\n\n  const [idata, setIdata] = useState({ 'fk': { 'coursecode': 'CSE 301', 'section': ['all'] } });\n  const [listofClassRoutting, setlistofClassRoutting] = useState([]);\n  const classSchedule = { 'S': [], 'M': [], 'T': [], 'W': [], 'R': [] }\n  const handelChange = (id, name, value) => {\n\n    // console.log(event.target.id);\n    // console.log(event.target.name);\n    // console.log(event.target.value);\n\n    // handel change a value of a particular id \n    if (name == 'section') {\n      // console.log(idata[event.target.id][event.target.name]);\n      // let tempsection = [];\n      // if (idata[id][name] === undefined) {\n\n      //   tempsection.push(value);\n      // } else {\n\n      //   tempsection = [...idata[id][name]];\n      // }\n\n      setIdata({ ...idata, [id]: { ...idata[id], [name]: [...value] } });\n      return;\n    }\n    setIdata({ ...idata, [id]: { ...idata[id], [name]: value.toString().toUpperCase() } })\n\n  }\n  const addMoreInputfields = () => {\n    if (Object.keys(idata).length > 3) {\n      return;\n    }\n    setIdata({\n      ...idata, [Date.now()]: {\n        'coursecode': '',\n        'section': ['all']\n      }\n    })\n  }\n  const removeInputField = (key) => {\n    const temp = { ...idata }\n    delete temp[key];\n    setIdata({ ...temp });\n  }\n  const handleAddlistofRouting = (obj) => {\n    // console.log(obj);\n\n    // const newlist = [...listofClassRoutting];\n    // newlist.push(obj);\n    setlistofClassRoutting((s) => [...s, obj]);\n  }\n  function renderOption(id) {\n    try {\n      const [couse, code] = idata[id].coursecode.split(' ')\n\n      let sections = dstate.courseData[couse][code];\n      return Object.keys(sections);\n      // .map((section, idx) => {\n\n\n      //   return <option key={idx} value={section}>{section}</option>;\n      // });\n\n      // for (let index = 0; index < sections.length; index++) {\n      //   const element = array[index];\n\n      // }\n\n    } catch (error) {\n      return []\n    }\n  }\n  const doPreOprationWork = () => {\n    let counter = 0;\n    let keys = Object.keys(idata);\n    for (const key of keys) {\n      let validlist = dstate.courseList.filter((val, i) => val.title === idata[key].coursecode);\n      if (validlist.length === 1) { counter += 1; }\n\n    }\n    return counter === keys.length;\n  }\n  const doOparation = () => {\n    if (!doPreOprationWork()) {\n      return;\n    }\n    \n    setlistofClassRoutting([]);\n    // console.log('[debug] start generating');\n    Generator(idata, 0, classSchedule, dstate, handleAddlistofRouting);\n\n  }\n  const showData = () => {\n    //return a list of schedule in below formate\n    /*\n    [\n      //scheule one \n      {\n\n        'CSE 225':{\n          coursecode:'CSE 225',\n          section:2,\n          schedule:[\n            'M 10:10AM-11:40AM',\n            'W 10:10AM-11:40AM',\n            'R 4:50PM-6:40PM',\n          ]\n        },\n        'CSE 301':{\n          .\n          .\n          .\n        },\n      },\n      //schedule two\n      {\n        .\n        .\n        .\n      }\n    ]\n    */\n    const gdata = []\n    for (let index = 0; index < listofClassRoutting.length; index++) {\n      const clsScheduleObj = listofClassRoutting[index];\n      const listofweekdays = Object.keys(clsScheduleObj);\n      let m = {}\n      for (const iterator of listofweekdays) {\n        ///iterator -> sunday, monday, thuesday ...\n        for (const clsDetailsObj of clsScheduleObj[iterator]) {\n          //M:[{classroutingOBJ},.....]\n          //S:[{classroutingOBJ},.....]\n          // let v={'coursecode':,'section':'','days':[{'day':'','time':''}]}\n          if (m[clsDetailsObj.coursecode]) {\n            m = {\n              ...m, [clsDetailsObj.coursecode]: {\n                coursecode: clsDetailsObj.coursecode,\n                section: clsDetailsObj.section,\n                schedule: [...m[clsDetailsObj.coursecode].schedule, `${iterator} ${clsDetailsObj.time}`]\n              }\n            }\n          } else {\n            m = {\n              ...m, [clsDetailsObj.coursecode]: {\n                coursecode: clsDetailsObj.coursecode,\n                section: clsDetailsObj.section,\n                schedule: [`${iterator} ${clsDetailsObj.time}`]\n              }\n            }\n          }\n\n\n\n        }\n      }\n      gdata.push(m);\n\n\n    }\n    return gdata;\n  }\n\n  useEffect(() => {\n    dispatch({ type: 'initCourses', payload: jdata });\n    const clist = []\n    Object.keys(jdata).map((course, i) => {\n      Object.keys(jdata[course]).map((code, j) => {\n        clist.push({ title: `${course} ${code}` });\n      });\n    });\n    dispatch({ type: 'initCourseList', payload: clist });\n\n\n  }, [])\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Schedule Generator </h1>\n      <samp className=\"subtitle\">for EWU</samp>\n      <div>\n\n\n      </div>\n\n      <div className=\"input-fields\">\n        {Object.keys(idata).map((key, idx) => {\n          \n          // console.log(idata[key].coursecode);\n          \n          return (\n            <div key={idx} className=\"input-field\" >\n              <ComboBox sid={key} courseCode={idata[key].coursecode} sname=\"coursecode\" handelChange={handelChange} clist={dstate.courseList} />\n              {/* <TextField id={key} name=\"coursecode\" onChange={(event)=>handelChange(key,'coursecode',event.target.value)} value={idata[key].coursecode} label=\"Course Code\" variant=\"outlined\" /> */}\n              {/* <input id= name=\"coursecode\" onChange={handelChange} value={idata[key].coursecode} placeholder=\"cse 225\" /> */}\n              <MultipleSelect sid={key} selectedSections={idata[key].section} sname=\"section\" handelChange={handelChange} soptions={renderOption} />\n              {/* <select id={key} name=\"section\" onChange={handelChange}  >\n              <option value={\"all\"}>all</option>\n              {renderOption(key)}\n            </select> */}\n              <IconButton aria-label=\"delete\" onClick={() => { removeInputField(key) }}>\n                <DeleteIcon />\n              </IconButton>\n              {/* <button onClick={() => { }}>remove</button> */}\n\n            </div>\n          );\n        })}\n      </div>\n\n      {/* <button onClick={() => {addMoreInputfields()  }}>add more fields</button> */}\n      {/* if inputfield has  more then  4 input*/}\n      {Object.keys(idata).length > 3 ? null :\n        <Button variant=\"outlined\" onClick={() => { addMoreInputfields() }}>add more fields</Button>\n      }\n      <br></br>\n      <br></br>\n      <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => {\n        doOparation();\n      }}>\n        Generate\n      </Button>\n      \n      <Container maxWidth=\"lg\">\n        {showData().map((value, i) => {\n\n          return <div className=\"schedule-table\" key={Date.now().toString() + i.toString()}><CustomizedTables key={i} data={value} /></div>;\n\n        })}\n      </Container>\n      <footer>\n        <div>\n          <pre>\n          <a href=\"https://tumzied.pythonanywhere.com/\" style={{color:'black'}}>tz</a> © 2020\n          </pre>\n        </div>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}