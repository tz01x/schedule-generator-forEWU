{"version":3,"sources":["logo.svg","mitable.js","multiselectInput.js","autoComplect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","fontWeight","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","props","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableBody","Object","keys","data","map","key","i","scope","coursecode","section","schedule","sch","split","day","time","formControl","margin","spacing","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","MultipleSelect","useTheme","React","useState","personName","setPersonName","useEffect","console","log","FormControl","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","handelChange","sid","sname","input","Input","MenuItem","soptions","name","ComboBox","Autocomplete","options","clist","val","title","getOptionLabel","option","renderInput","params","TextField","label","variant","reducer","state","type","courseData","payload","courseList","strptime","string","postindex","search","RegExp","slice","length","Date","h","m","parseInt","toString","covStrToDatetime","t1","t2","isValidSchedule","classSchedule","newStartTime","newFinishTime","counter","clsStartTime","clsFinishTime","App","useReducer","dstate","dispatch","idata","setIdata","listofClassRoutting","setlistofClassRoutting","toUpperCase","handleAddlistofRouting","obj","s","renderOption","couse","code","sections","error","doOparation","filter","doPreOprationWork","Generator","inputs","idx","values","course","listOFsection","index","validSection","classSchedulecpy","JSON","parse","stringify","listOFschedule","schduleIdx","push","jdata","j","IconButton","onClick","temp","removeInputField","Button","now","size","Container","gdata","clsScheduleObj","iterator","clsDetailsObj","showData","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6d61f142.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n    fontWeight:700\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Course code</StyledTableCell>\r\n            <StyledTableCell >section</StyledTableCell>\r\n            <StyledTableCell >Schedule</StyledTableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.keys(props.data).map((key,i) => (\r\n            <StyledTableRow key={key+i}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                  <div className=\"r-courseC\">\r\n\r\n                {props.data[key].coursecode}\r\n                  </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell><div >{props.data[key].section}</div></StyledTableCell>\r\n              <StyledTableCell>\r\n\r\n                <div className=\"r-times\">\r\n                    {props.data[key].schedule.map((sch,i)=>{\r\n                        const [day,time]=sch.split(' ');\r\n                        return(\r\n                            <div className=\"r-time\" key={sch}>\r\n                            <samp className=\"r-tday\">{day}</samp>  {time}\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                \r\n\r\n                </div>\r\n              </StyledTableCell>\r\n           \r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n    props.handelChange(props.sid,props.sname,event.target.value);\r\n\r\n  };\r\n\r\n \r\n  React.useEffect(()=>{\r\n    console.log('multi-select');\r\n    \r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-name-label\">Section</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n             <MenuItem key={'all'} value={'all'} >\r\n            all\r\n            </MenuItem>\r\n          {props.soptions(props.sid).map((name) => (\r\n            <MenuItem key={name} value={name} >\r\n            {name}\r\n            </MenuItem>\r\n        ))}\r\n \r\n        </Select>\r\n      </FormControl>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function ComboBox(props) {\r\n    const handelChangr=(event,val)=>{\r\n        // console.log(val);\r\n        if(val!=null)\r\n            props.handelChange(props.sid,props.sname,val.title);\r\n        \r\n    }\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={props.clist}\r\n      onChange={handelChangr}\r\n      getOptionLabel={(option) => option.title}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Course code\" variant=\"outlined\" />}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport jdata from './coursedlist.json';\nimport ViewRouteing from './viewRouting';\nimport Container from '@material-ui/core/Container';\nimport CustomizedTables from './mitable';\nimport MultipleSelect from './multiselectInput';\nimport ComboBox from './autoComplect';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'initCourses':\n      {\n        return { ...state, courseData: action.payload }\n      }\n    case 'initCourseList': {\n      return { ...state, courseList: action.payload }\n    }\n\n    default: {\n\n      return state;\n    }\n  }\n}\nfunction strptime(string) {\n  // convart string to datetime object \n  // string formate shoule be \"h:mAM/PM\"\n  const postindex = string.search(new RegExp('AM|PM'));// search fo am or pm in the string \n  const time = string.slice(0, postindex);\n  const post = string.slice(postindex, string.length);\n\n  if (post == \"AM\") {\n    return new Date(`1900-01-01T${time}Z`);\n  }\n  let [h, m] = time.split(':');\n  if (parseInt(h) != 12) {\n    h = parseInt(h) + 12;\n  }\n  return new Date(`1900-01-01T${h.toString()}:${m}Z`);\n\n}\nfunction covStrToDatetime(time) {\n  //[params expample]  ('10:10AM-11:40AM')\n  const [t1, t2] = time.split('-');\n  return [strptime(t1), strptime(t2)];\n}\nfunction isValidSchedule(day, time, classSchedule) {\n  //[params expample]  ('S', '10:10AM-11:40AM', OBJECT)\n  console.log(day);\n\n  console.log(classSchedule);\n\n  if (classSchedule[day].length === 0) {\n    return true;\n  }\n  if (day == null || time == null) {\n\n    return false;\n  }\n  const [newStartTime, newFinishTime] = covStrToDatetime(time);\n  let counter = 0;\n  for (const iterator of classSchedule[day]) {\n    const [clsStartTime, clsFinishTime] = covStrToDatetime(iterator['time']);\n    if ((newStartTime < clsStartTime && newFinishTime < clsFinishTime) || (newStartTime > clsStartTime && clsFinishTime < newStartTime)) {\n      counter += 1;\n    }\n  }\n  if (counter == classSchedule[day].length) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction Generator(inputs, idx, classSchedule, dstate, handleAddlistofRouting) {\n\n  const values = Object.values(inputs);\n  // console.log(values);\n  // console.log(idx);\n\n\n  if (idx == values.length)\n    return;\n  // console.log(values);\n  const [course, code] = values[idx].coursecode.split(' ') //CSE 225=> ['CSE' , '225']\n  const listOFsection = values[idx].section[0] == 'all' ? Object.keys(dstate.courseData[course][code]) : [...values[idx].section];\n  // for eache section in this  course \n  for (let index = 0; index < listOFsection.length; index++) {\n    let validSection = 0;\n    const classSchedulecpy = JSON.parse(JSON.stringify(classSchedule));\n    //  classSchedulecpy =  JSON.parse(classSchedulecpy);\n    const listOFschedule = Object.keys(dstate.courseData[course][code][listOFsection[index]]);//return list of days that a particular sectoin have a class on\n\n    for (let schduleIdx = 0; schduleIdx < listOFschedule.length; schduleIdx++) {\n      // #for every schedule in a section we chack its valid or not\n      // # if its not valid then new loop next section in this course \n\n      //[argument expample]  (S, 10:10AM-11:40AM, classSchduelOBJ)\n      if (isValidSchedule(listOFschedule[schduleIdx], dstate.courseData[course][code][listOFsection[index]][listOFschedule[schduleIdx]], classSchedulecpy)) {\n        validSection += 1;\n\n        classSchedulecpy[listOFschedule[schduleIdx]].push({\n          'coursecode': `${course} ${code}`,\n          'section': listOFsection[index],\n          'time': dstate.courseData[course][code][listOFsection[index]][listOFschedule[schduleIdx]],\n          'room': 'none'\n        });\n      } else {\n        break;\n      }\n\n    }\n    if (listOFschedule.length == validSection) {\n\n      if (idx == values.length - 1) {\n        // console.log('[dubug]');\n\n        // console.log(classSchedulecpy);\n        handleAddlistofRouting(classSchedulecpy)\n\n      } else {\n        Generator(inputs, idx + 1, { ...classSchedulecpy }, dstate, handleAddlistofRouting);\n      }\n    }\n\n  }\n\n\n}\n\nfunction App() {\n\n  const [dstate, dispatch] = useReducer(reducer, {});\n\n  const [idata, setIdata] = useState({ 'fk': { 'coursecode': 'CSE 301', 'section': ['all'] } });\n  const [listofClassRoutting, setlistofClassRoutting] = useState([]);\n  const classSchedule = { 'S': [], 'M': [], 'T': [], 'W': [], 'R': [] }\n  const handelChange = (id, name, value) => {\n\n    // console.log(event.target.id);\n    // console.log(event.target.name);\n    // console.log(event.target.value);\n\n    // handel change a value of a particular id \n    if (name == 'section') {\n      // console.log(idata[event.target.id][event.target.name]);\n      // let tempsection = [];\n      // if (idata[id][name] === undefined) {\n\n      //   tempsection.push(value);\n      // } else {\n\n      //   tempsection = [...idata[id][name]];\n      // }\n\n      setIdata({ ...idata, [id]: { ...idata[id], [name]: [...value] } });\n      return;\n    }\n    setIdata({ ...idata, [id]: { ...idata[id], [name]: value.toString().toUpperCase() } })\n\n  }\n  const addMoreInputfields = () => {\n    if (Object.keys(idata).length > 3) {\n      return;\n    }\n    setIdata({\n      ...idata, [Date.now()]: {\n        'coursecode': '',\n        'section': ['all']\n      }\n    })\n  }\n  const removeInputField = (key) => {\n    const temp = { ...idata }\n    delete temp[key];\n    setIdata({ ...temp });\n  }\n  const handleAddlistofRouting = (obj) => {\n    // console.log(obj);\n\n    // const newlist = [...listofClassRoutting];\n    // newlist.push(obj);\n    setlistofClassRoutting((s) => [...s, obj]);\n  }\n  function renderOption(id) {\n    try {\n      const [couse, code] = idata[id].coursecode.split(' ')\n\n      let sections = dstate.courseData[couse][code];\n      return Object.keys(sections);\n      // .map((section, idx) => {\n\n\n      //   return <option key={idx} value={section}>{section}</option>;\n      // });\n\n      // for (let index = 0; index < sections.length; index++) {\n      //   const element = array[index];\n\n      // }\n\n    } catch (error) {\n      return []\n    }\n  }\n  const doPreOprationWork = () => {\n    let counter = 0;\n    let keys = Object.keys(idata);\n    for (const key of keys) {\n      let validlist = dstate.courseList.filter((val, i) => val.title === idata[key].coursecode);\n      if (validlist.length === 1) { counter += 1; }\n\n    }\n    return counter === keys.length;\n  }\n  const doOparation = () => {\n    if (!doPreOprationWork()) {\n      return;\n    }\n    setlistofClassRoutting([]);\n    Generator(idata, 0, classSchedule, dstate, handleAddlistofRouting);\n  }\n  const showData = () => {\n    // const tableDataSingleClassSchedule=[{'coursecode':'','section':'','days':[{'day':'','time':''}]}]\n    const gdata = []\n    for (let index = 0; index < listofClassRoutting.length; index++) {\n      const clsScheduleObj = listofClassRoutting[index];\n      const listofweekdays = Object.keys(clsScheduleObj);\n      let m = {}\n      for (const iterator of listofweekdays) {\n        ///iterator -> sunday, monday, thuesday ...\n        for (const clsDetailsObj of clsScheduleObj[iterator]) {\n          //M:[{classroutingOBJ},.....]\n          //S:[{classroutingOBJ},.....]\n          // let v={'coursecode':,'section':'','days':[{'day':'','time':''}]}\n          if (m[clsDetailsObj.coursecode]) {\n            m = {\n              ...m, [clsDetailsObj.coursecode]: {\n                coursecode: clsDetailsObj.coursecode,\n                section: clsDetailsObj.section,\n                schedule: [...m[clsDetailsObj.coursecode].schedule, `${iterator} ${clsDetailsObj.time}`]\n              }\n            }\n          } else {\n            m = {\n              ...m, [clsDetailsObj.coursecode]: {\n                coursecode: clsDetailsObj.coursecode,\n                section: clsDetailsObj.section,\n                schedule: [`${iterator} ${clsDetailsObj.time}`]\n              }\n            }\n          }\n\n\n\n        }\n      }\n      gdata.push(m);\n\n\n    }\n    return gdata;\n  }\n\n  useEffect(() => {\n    dispatch({ type: 'initCourses', payload: jdata });\n    const clist = []\n    Object.keys(jdata).map((course, i) => {\n      Object.keys(jdata[course]).map((code, j) => {\n        clist.push({ title: `${course} ${code}` });\n      });\n    });\n    dispatch({ type: 'initCourseList', payload: clist });\n\n\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Schedule Generator </h1>\n      <samp className=\"subtitle\">for EWU</samp>\n      <div>\n\n\n      </div>\n\n      <div className=\"input-fields\">\n        {Object.keys(idata).map((key, idx) => {\n          return (\n            <div key={idx} className=\"input-field\" >\n              <ComboBox sid={key} sname=\"coursecode\" handelChange={handelChange} clist={dstate.courseList} />\n              {/* <TextField id={key} name=\"coursecode\" onChange={(event)=>handelChange(key,'coursecode',event.target.value)} value={idata[key].coursecode} label=\"Course Code\" variant=\"outlined\" /> */}\n              {/* <input id= name=\"coursecode\" onChange={handelChange} value={idata[key].coursecode} placeholder=\"cse 225\" /> */}\n              <MultipleSelect sid={key} sname=\"section\" handelChange={handelChange} soptions={renderOption} />\n              {/* <select id={key} name=\"section\" onChange={handelChange}  >\n              <option value={\"all\"}>all</option>\n              {renderOption(key)}\n            </select> */}\n              <IconButton aria-label=\"delete\" onClick={() => { removeInputField(key) }}>\n                <DeleteIcon />\n              </IconButton>\n              {/* <button onClick={() => { }}>remove</button> */}\n\n            </div>\n          );\n        })}\n      </div>\n\n      {/* <button onClick={() => {addMoreInputfields()  }}>add more fields</button> */}\n      {/* if inputfield has  more then  4 input*/}\n      {Object.keys(idata).length > 3 ? null :\n        <Button variant=\"outlined\" onClick={() => { addMoreInputfields() }}>add more fields</Button>\n      }\n      <br></br>\n      <br></br>\n      {/* <button onClick={() => {\n        setlistofClassRoutting([])\n        Generator(idata, 0, classSchedule, dstate, handleAddlistofRouting);\n      }}></button> */}\n      <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => {\n        doOparation();\n      }}\n      >\n        Generate\n      </Button>\n      {/* <ViewRouteing\n       listofClassRoutting={listofClassRoutting}\n       ></ViewRouteing> */}\n      <Container maxWidth=\"lg\">\n\n        {/* <div className=\"\">\n          \n          <div>\n            <div className=\"r-title\" >\n              <div>Course Code</div>\n              <div>Section</div>\n              <div>Schedule</div>\n            </div>\n\n            <div className=\"r-items\">\n              <div className=\"r-c\">\n\n                css 225\n        </div>\n              <div className=\"r-sec\">\n\n                3\n        </div>\n              <div className=\"r-times\">\n                <div className=\"r-time\">\n                 <samp className=\"r-tday\">S</samp>  10:10AM-11:40AM\n          </div>\n          <div className=\"r-time\">\n\n                <samp className=\"r-tday\">S</samp>  10:10AM-11:40AM\n\n          </div>\n          <div className=\"r-time\">\n\n                <samp className=\"r-tday\">S</samp>  10:10AM-11:40AM\n\n          </div>\n\n              </div>\n\n            </div>\n           \n            \n          </div>\n\n\n        </div> */}\n        {showData().map((value, i) => {\n\n          return <div className=\"schedule-table\" key={Date.now().toString() + i.toString()}><CustomizedTables key={i} data={value} /></div>;\n\n        })}\n\n        {/* <br/>\n        \n        <CustomizedTables /> */}\n\n\n      </Container>\n      <footer>\n        <div>\n          <pre>\n          <a href=\"https://tumzied.pythonanywhere.com/\" style={{color:'black'}}>tz</a> © 2020\n          </pre>\n        </div>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}